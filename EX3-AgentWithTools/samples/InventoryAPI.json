{
  "openapi": "3.0.0",
  "info": {
    "title": "Industrial Inventory Management API",
    "description": "Comprehensive API for managing industrial inventory including materials, equipment, and consumables with real-time tracking capabilities.",
    "version": "1.0.0",
    "contact": {
      "name": "Industrial Systems Team",
      "email": "inventory-api@company.com"
    }
  },
  "servers": [
    {
      "url": "https://ibm-aiclass-apim.azure-api.net",
      "description": "IBM AI Class Production API Server"
    }
  ],
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "paths": {
    "/inventory/inventory": {
      "get": {
        "summary": "List all inventory items",
        "description": "Retrieve a paginated list of all inventory items with optional filtering by category, location, or status.",
        "operationId": "listInventoryItems",
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "description": "Filter by item category",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["raw_materials", "components", "tools", "equipment", "consumables", "finished_goods"]
            }
          },
          {
            "name": "location_id",
            "in": "query",
            "description": "Filter by storage location ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by item status",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["available", "reserved", "out_of_stock", "maintenance", "damaged"]
            }
          },
          {
            "name": "low_stock",
            "in": "query",
            "description": "Filter items with stock below minimum threshold",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination (starts at 1)",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new inventory item",
        "description": "Add a new item to the inventory system with all required details.",
        "operationId": "createInventoryItem",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInventoryItemRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Item created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict - item with this SKU already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/items/{item_id}": {
      "get": {
        "summary": "Get inventory item details",
        "description": "Retrieve detailed information about a specific inventory item including current stock levels and transaction history.",
        "operationId": "getInventoryItem",
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the inventory item",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryItemDetail"
                }
              }
            }
          },
          "404": {
            "description": "Item not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update inventory item",
        "description": "Update all properties of an existing inventory item.",
        "operationId": "updateInventoryItem",
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the inventory item",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInventoryItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Item updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryItem"
                }
              }
            }
          },
          "404": {
            "description": "Item not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete inventory item",
        "description": "Remove an item from the inventory system. Items with active reservations cannot be deleted.",
        "operationId": "deleteInventoryItem",
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the inventory item",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Item deleted successfully"
          },
          "404": {
            "description": "Item not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Cannot delete - item has active reservations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/items/{item_id}/stock": {
      "patch": {
        "summary": "Update item stock levels",
        "description": "Adjust stock levels for an inventory item with transaction logging.",
        "operationId": "updateItemStock",
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the inventory item",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StockUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Stock updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockUpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid stock operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Item not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/items/{item_id}/reserve": {
      "post": {
        "summary": "Reserve inventory items",
        "description": "Reserve a specified quantity of an item for production or maintenance orders.",
        "operationId": "reserveInventoryItem",
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the inventory item",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Reservation created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Insufficient stock or invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/locations": {
      "get": {
        "summary": "List all storage locations",
        "description": "Retrieve all warehouse locations, bins, and storage areas.",
        "operationId": "listLocations",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/reports/low-stock": {
      "get": {
        "summary": "Get low stock report",
        "description": "Generate a report of all items with stock levels below their minimum thresholds.",
        "operationId": "getLowStockReport",
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "description": "Filter by item category",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["raw_materials", "components", "tools", "equipment", "consumables", "finished_goods"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Low stock report generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LowStockReport"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/reports/utilization": {
      "get": {
        "summary": "Get inventory utilization report",
        "description": "Generate utilization statistics for inventory items over a specified time period.",
        "operationId": "getUtilizationReport",
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "description": "Start date for the report (YYYY-MM-DD)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "End date for the report (YYYY-MM-DD)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Utilization report generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UtilizationReport"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      }
    },
    "schemas": {
      "InventoryItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the item"
          },
          "sku": {
            "type": "string",
            "description": "Stock Keeping Unit identifier"
          },
          "name": {
            "type": "string",
            "description": "Item name"
          },
          "description": {
            "type": "string",
            "description": "Detailed item description"
          },
          "category": {
            "type": "string",
            "enum": ["raw_materials", "components", "tools", "equipment", "consumables", "finished_goods"]
          },
          "unit_of_measure": {
            "type": "string",
            "description": "Unit of measurement (pieces, kg, meters, liters, etc.)"
          },
          "current_stock": {
            "type": "number",
            "description": "Current available stock quantity"
          },
          "reserved_stock": {
            "type": "number",
            "description": "Quantity currently reserved"
          },
          "minimum_stock": {
            "type": "number",
            "description": "Minimum stock threshold for reordering"
          },
          "maximum_stock": {
            "type": "number",
            "description": "Maximum stock capacity"
          },
          "unit_cost": {
            "type": "number",
            "description": "Cost per unit"
          },
          "location_id": {
            "type": "string",
            "description": "Primary storage location ID"
          },
          "supplier": {
            "type": "string",
            "description": "Primary supplier name"
          },
          "status": {
            "type": "string",
            "enum": ["available", "reserved", "out_of_stock", "maintenance", "damaged"]
          },
          "last_updated": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          }
        },
        "required": ["id", "sku", "name", "category", "unit_of_measure", "current_stock", "minimum_stock", "status"]
      },
      "InventoryItemDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InventoryItem"
          },
          {
            "type": "object",
            "properties": {
              "transaction_history": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StockTransaction"
                },
                "description": "Recent stock transactions"
              },
              "reservations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Reservation"
                },
                "description": "Active reservations"
              }
            }
          }
        ]
      },
      "CreateInventoryItemRequest": {
        "type": "object",
        "properties": {
          "sku": {
            "type": "string",
            "description": "Stock Keeping Unit identifier"
          },
          "name": {
            "type": "string",
            "description": "Item name"
          },
          "description": {
            "type": "string",
            "description": "Detailed item description"
          },
          "category": {
            "type": "string",
            "enum": ["raw_materials", "components", "tools", "equipment", "consumables", "finished_goods"]
          },
          "unit_of_measure": {
            "type": "string",
            "description": "Unit of measurement"
          },
          "initial_stock": {
            "type": "number",
            "description": "Initial stock quantity"
          },
          "minimum_stock": {
            "type": "number",
            "description": "Minimum stock threshold"
          },
          "maximum_stock": {
            "type": "number",
            "description": "Maximum stock capacity"
          },
          "unit_cost": {
            "type": "number",
            "description": "Cost per unit"
          },
          "location_id": {
            "type": "string",
            "description": "Primary storage location ID"
          },
          "supplier": {
            "type": "string",
            "description": "Primary supplier name"
          }
        },
        "required": ["sku", "name", "category", "unit_of_measure", "initial_stock", "minimum_stock", "location_id"]
      },
      "UpdateInventoryItemRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Item name"
          },
          "description": {
            "type": "string",
            "description": "Detailed item description"
          },
          "minimum_stock": {
            "type": "number",
            "description": "Minimum stock threshold"
          },
          "maximum_stock": {
            "type": "number",
            "description": "Maximum stock capacity"
          },
          "unit_cost": {
            "type": "number",
            "description": "Cost per unit"
          },
          "location_id": {
            "type": "string",
            "description": "Primary storage location ID"
          },
          "supplier": {
            "type": "string",
            "description": "Primary supplier name"
          },
          "status": {
            "type": "string",
            "enum": ["available", "reserved", "out_of_stock", "maintenance", "damaged"]
          }
        }
      },
      "StockUpdateRequest": {
        "type": "object",
        "properties": {
          "operation": {
            "type": "string",
            "enum": ["add", "remove", "set"],
            "description": "Type of stock operation"
          },
          "quantity": {
            "type": "number",
            "description": "Quantity for the operation"
          },
          "reason": {
            "type": "string",
            "description": "Reason for stock adjustment"
          },
          "reference": {
            "type": "string",
            "description": "Reference document or order number"
          }
        },
        "required": ["operation", "quantity", "reason"]
      },
      "StockUpdateResponse": {
        "type": "object",
        "properties": {
          "item_id": {
            "type": "string"
          },
          "previous_stock": {
            "type": "number"
          },
          "new_stock": {
            "type": "number"
          },
          "transaction_id": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ReservationRequest": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "number",
            "description": "Quantity to reserve"
          },
          "purpose": {
            "type": "string",
            "description": "Purpose of the reservation"
          },
          "reference": {
            "type": "string",
            "description": "Order or work order reference"
          },
          "expiry_date": {
            "type": "string",
            "format": "date-time",
            "description": "When the reservation expires"
          }
        },
        "required": ["quantity", "purpose", "reference"]
      },
      "ReservationResponse": {
        "type": "object",
        "properties": {
          "reservation_id": {
            "type": "string"
          },
          "item_id": {
            "type": "string"
          },
          "quantity": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "enum": ["active", "fulfilled", "cancelled", "expired"]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Reservation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "quantity": {
            "type": "number"
          },
          "purpose": {
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["active", "fulfilled", "cancelled", "expired"]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "expiry_date": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "StockTransaction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "operation": {
            "type": "string",
            "enum": ["add", "remove", "set", "reserve", "release"]
          },
          "quantity": {
            "type": "number"
          },
          "reason": {
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "type": "string"
          }
        }
      },
      "Location": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": ["warehouse", "bin", "shelf", "rack", "floor"]
          },
          "parent_location_id": {
            "type": "string"
          },
          "capacity": {
            "type": "number"
          },
          "current_utilization": {
            "type": "number"
          }
        }
      },
      "InventoryListResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InventoryItem"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        }
      },
      "LocationListResponse": {
        "type": "object",
        "properties": {
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Location"
            }
          }
        }
      },
      "LowStockReport": {
        "type": "object",
        "properties": {
          "report_date": {
            "type": "string",
            "format": "date-time"
          },
          "total_items": {
            "type": "integer"
          },
          "categories": {
            "type": "object",
            "additionalProperties": {
              "type": "integer"
            }
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "item_id": {
                  "type": "string"
                },
                "sku": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "current_stock": {
                  "type": "number"
                },
                "minimum_stock": {
                  "type": "number"
                },
                "shortage": {
                  "type": "number"
                },
                "category": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "UtilizationReport": {
        "type": "object",
        "properties": {
          "report_period": {
            "type": "object",
            "properties": {
              "start_date": {
                "type": "string",
                "format": "date"
              },
              "end_date": {
                "type": "string",
                "format": "date"
              }
            }
          },
          "summary": {
            "type": "object",
            "properties": {
              "total_transactions": {
                "type": "integer"
              },
              "total_value_moved": {
                "type": "number"
              },
              "avg_turnover_rate": {
                "type": "number"
              }
            }
          },
          "by_category": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "category": {
                  "type": "string"
                },
                "transaction_count": {
                  "type": "integer"
                },
                "value_moved": {
                  "type": "number"
                },
                "turnover_rate": {
                  "type": "number"
                }
              }
            }
          }
        }
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "current_page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "total_pages": {
            "type": "integer"
          },
          "total_items": {
            "type": "integer"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "details": {
                "type": "object"
              }
            }
          }
        }
      }
    }
  }
}